// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notification renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Notification />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="notif-message"
        >
          <i
            className="material-icons icon-notif"
          >
            notifications
          </i>
          Bomb lagdi menu
        </div>,
        <i
          className="material-icons btn-close"
        >
          close
        </i>,
      ],
      "className": "notif-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="material-icons icon-notif"
            >
              notifications
            </i>,
            "Bomb lagdi menu",
          ],
          "className": "notif-message",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "notifications",
              "className": "material-icons icon-notif",
            },
            "ref": null,
            "rendered": "notifications",
            "type": "i",
          },
          "Bomb lagdi menu",
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "close",
          "className": "material-icons btn-close",
        },
        "ref": null,
        "rendered": "close",
        "type": "i",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="notif-message"
          >
            <i
              className="material-icons icon-notif"
            >
              notifications
            </i>
            Bomb lagdi menu
          </div>,
          <i
            className="material-icons btn-close"
          >
            close
          </i>,
        ],
        "className": "notif-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="material-icons icon-notif"
              >
                notifications
              </i>,
              "Bomb lagdi menu",
            ],
            "className": "notif-message",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "notifications",
                "className": "material-icons icon-notif",
              },
              "ref": null,
              "rendered": "notifications",
              "type": "i",
            },
            "Bomb lagdi menu",
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "close",
            "className": "material-icons btn-close",
          },
          "ref": null,
          "rendered": "close",
          "type": "i",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
