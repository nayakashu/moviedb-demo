// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginModal renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="logo"
        >
          <i
            className="material-icons"
          >
            timeline
          </i>
          <span
            className="logo-text"
          >
            MovieHunt
          </span>
        </span>,
        <i
          className="material-icons btn-close"
        >
          close
        </i>,
        <form>
          <input
            placeholder="Username"
            type="text"
          />
          <input
            placeholder="Password"
            type="password"
          />
          <button
            className="btn-login"
            onClick={[Function]}
          >
            Login
          </button>
        </form>,
        <div
          className="forgot-pass-legend"
        >
          <span
            className="signup-link"
          >
            Don't have an account? 
            <a
              href="/#/"
            >
              Sign up
            </a>
          </span>
          <span
            className="recover-pass"
          >
            Recover password
          </span>
        </div>,
      ],
      "className": "login-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="material-icons"
            >
              timeline
            </i>,
            <span
              className="logo-text"
            >
              MovieHunt
            </span>,
          ],
          "className": "logo",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "timeline",
              "className": "material-icons",
            },
            "ref": null,
            "rendered": "timeline",
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "MovieHunt",
              "className": "logo-text",
            },
            "ref": null,
            "rendered": "MovieHunt",
            "type": "span",
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "close",
          "className": "material-icons btn-close",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "close",
        "type": "i",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              placeholder="Username"
              type="text"
            />,
            <input
              placeholder="Password"
              type="password"
            />,
            <button
              className="btn-login"
              onClick={[Function]}
            >
              Login
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "placeholder": "Username",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "placeholder": "Password",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "btn-login",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="signup-link"
            >
              Don't have an account? 
              <a
                href="/#/"
              >
                Sign up
              </a>
            </span>,
            <span
              className="recover-pass"
            >
              Recover password
            </span>,
          ],
          "className": "forgot-pass-legend",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Don't have an account? ",
                <a
                  href="/#/"
                >
                  Sign up
                </a>,
              ],
              "className": "signup-link",
            },
            "ref": null,
            "rendered": Array [
              "Don't have an account? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Sign up",
                  "href": "/#/",
                },
                "ref": null,
                "rendered": "Sign up",
                "type": "a",
              },
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Recover password",
              "className": "recover-pass",
            },
            "ref": null,
            "rendered": "Recover password",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="logo"
          >
            <i
              className="material-icons"
            >
              timeline
            </i>
            <span
              className="logo-text"
            >
              MovieHunt
            </span>
          </span>,
          <i
            className="material-icons btn-close"
          >
            close
          </i>,
          <form>
            <input
              placeholder="Username"
              type="text"
            />
            <input
              placeholder="Password"
              type="password"
            />
            <button
              className="btn-login"
              onClick={[Function]}
            >
              Login
            </button>
          </form>,
          <div
            className="forgot-pass-legend"
          >
            <span
              className="signup-link"
            >
              Don't have an account? 
              <a
                href="/#/"
              >
                Sign up
              </a>
            </span>
            <span
              className="recover-pass"
            >
              Recover password
            </span>
          </div>,
        ],
        "className": "login-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="material-icons"
              >
                timeline
              </i>,
              <span
                className="logo-text"
              >
                MovieHunt
              </span>,
            ],
            "className": "logo",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "timeline",
                "className": "material-icons",
              },
              "ref": null,
              "rendered": "timeline",
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "MovieHunt",
                "className": "logo-text",
              },
              "ref": null,
              "rendered": "MovieHunt",
              "type": "span",
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "close",
            "className": "material-icons btn-close",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "close",
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                placeholder="Username"
                type="text"
              />,
              <input
                placeholder="Password"
                type="password"
              />,
              <button
                className="btn-login"
                onClick={[Function]}
              >
                Login
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "placeholder": "Username",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "placeholder": "Password",
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
                "className": "btn-login",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Login",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="signup-link"
              >
                Don't have an account? 
                <a
                  href="/#/"
                >
                  Sign up
                </a>
              </span>,
              <span
                className="recover-pass"
              >
                Recover password
              </span>,
            ],
            "className": "forgot-pass-legend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Don't have an account? ",
                  <a
                    href="/#/"
                  >
                    Sign up
                  </a>,
                ],
                "className": "signup-link",
              },
              "ref": null,
              "rendered": Array [
                "Don't have an account? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sign up",
                    "href": "/#/",
                  },
                  "ref": null,
                  "rendered": "Sign up",
                  "type": "a",
                },
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Recover password",
                "className": "recover-pass",
              },
              "ref": null,
              "rendered": "Recover password",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
