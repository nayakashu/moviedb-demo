// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddMovieModal renders correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <AddMovieModal
    addNewMovie={[MockFunction]}
    closeAddMovie={[MockFunction]}
    showNotification={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": AddMovieModal {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 63,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 62,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addNewMovie": [MockFunction],
                    "closeAddMovie": [MockFunction],
                    "showNotification": [MockFunction],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login-form"
                >
                  <span
                    class="logo"
                  >
                    <i
                      class="material-icons"
                    >
                      timeline
                    </i>
                    <span
                      class="logo-text"
                    >
                      Add Movie
                    </span>
                  </span>
                  <i
                    class="material-icons btn-close"
                  >
                    close
                  </i>
                  <form>
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />
                    <input
                      placeholder="Casts"
                      type="text"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>
                    <textarea
                      class="txt-movie-desc"
                      placeholder="Movie overview"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addNewMovie": [MockFunction],
                    "closeAddMovie": [MockFunction],
                    "showNotification": [MockFunction],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login-form"
                >
                  <span
                    class="logo"
                  >
                    <i
                      class="material-icons"
                    >
                      timeline
                    </i>
                    <span
                      class="logo-text"
                    >
                      Add Movie
                    </span>
                  </span>
                  <i
                    class="material-icons btn-close"
                  >
                    close
                  </i>
                  <form>
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />
                    <input
                      placeholder="Casts"
                      type="text"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>
                    <textarea
                      class="txt-movie-desc"
                      placeholder="Movie overview"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 64,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
            "lineNumber": 28,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 65,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
              "lineNumber": 29,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 68,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                "lineNumber": 30,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "i",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "timeline",
                "className": "material-icons",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "timeline",
                "className": "material-icons",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 69,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                  "lineNumber": 31,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "span",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Add Movie",
                  "className": "logo-text",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Add Movie",
                  "className": "logo-text",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <span
                  class="logo-text"
                >
                  Add Movie
                </span>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "span",
                "updateQueue": null,
              },
              "stateNode": <i
                class="material-icons"
              >
                timeline
              </i>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "i",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "span",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <i
                  className="material-icons"
                >
                  timeline
                </i>,
                <span
                  className="logo-text"
                >
                  Add Movie
                </span>,
              ],
              "className": "logo",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <i
                  className="material-icons"
                >
                  timeline
                </i>,
                <span
                  className="logo-text"
                >
                  Add Movie
                </span>,
              ],
              "className": "logo",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 66,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                "lineNumber": 34,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "i",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "close",
                "className": "material-icons btn-close",
                "onClick": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "close",
                "className": "material-icons btn-close",
                "onClick": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 67,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                  "lineNumber": 41,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 70,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                    "lineNumber": 42,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "input",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "placeholder": "Movie Title",
                    "type": "text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "placeholder": "Movie Title",
                    "type": "text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 71,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                      "lineNumber": 43,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "placeholder": "Casts",
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "placeholder": "Casts",
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 72,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                        "lineNumber": 44,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 75,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                          "lineNumber": 45,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 77,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                            "lineNumber": 46,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "input",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "placeholder": "Date of Launch",
                            "type": "text",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "placeholder": "Date of Launch",
                            "type": "text",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 78,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 47,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "i",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "date_range",
                              "className": "material-icons",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "date_range",
                              "className": "material-icons",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <i
                              class="material-icons"
                            >
                              date_range
                            </i>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "i",
                            "updateQueue": null,
                          },
                          "stateNode": <input
                            placeholder="Date of Launch"
                            type="text"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />,
                            <i
                              className="material-icons"
                            >
                              date_range
                            </i>,
                          ],
                          "className": "col-sm-6 icon-overlay",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />,
                            <i
                              className="material-icons"
                            >
                              date_range
                            </i>,
                          ],
                          "className": "col-sm-6 icon-overlay",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 76,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                            "lineNumber": 49,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 79,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 50,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "placeholder": "Movie Poster",
                              "type": "text",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "placeholder": "Movie Poster",
                              "type": "text",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 80,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 51,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "i",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "cloud_upload",
                                "className": "material-icons",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "cloud_upload",
                                "className": "material-icons",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <i
                                class="material-icons"
                              >
                                cloud_upload
                              </i>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "i",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              placeholder="Movie Poster"
                              type="text"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                placeholder="Movie Poster"
                                type="text"
                              />,
                              <i
                                className="material-icons"
                              >
                                cloud_upload
                              </i>,
                            ],
                            "className": "col-sm-6 icon-overlay",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <input
                                placeholder="Movie Poster"
                                type="text"
                              />,
                              <i
                                className="material-icons"
                              >
                                cloud_upload
                              </i>,
                            ],
                            "className": "col-sm-6 icon-overlay",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              className="material-icons"
                            >
                              date_range
                            </i>
                          </div>,
                          <div
                            className="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              className="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>,
                        ],
                        "className": "row",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              className="material-icons"
                            >
                              date_range
                            </i>
                          </div>,
                          <div
                            className="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              className="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>,
                        ],
                        "className": "row",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 73,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                          "lineNumber": 54,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "textarea",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "txt-movie-desc",
                          "placeholder": "Movie overview",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "className": "txt-movie-desc",
                          "placeholder": "Movie overview",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 74,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                            "lineNumber": 55,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 81,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 56,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 83,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 57,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "button",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Cancel",
                                "className": "btn-cancel",
                                "onClick": [MockFunction],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "Cancel",
                                "className": "btn-cancel",
                                "onClick": [MockFunction],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <button
                                class="btn-cancel"
                              >
                                Cancel
                              </button>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "button",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <button
                                className="btn-cancel"
                                onClick={[MockFunction]}
                              >
                                Cancel
                              </button>,
                              "className": "col-sm-6",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <button
                                className="btn-cancel"
                                onClick={[MockFunction]}
                              >
                                Cancel
                              </button>,
                              "className": "col-sm-6",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 82,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 61,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 84,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                  "lineNumber": 62,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "button",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Add Movie",
                                  "className": "btn-login",
                                  "onClick": [Function],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Add Movie",
                                  "className": "btn-login",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <button
                                  class="btn-login"
                                >
                                  Add Movie
                                </button>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <button
                                  className="btn-login"
                                  onClick={[Function]}
                                >
                                  Add Movie
                                </button>,
                                "className": "col-sm-6",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <button
                                  className="btn-login"
                                  onClick={[Function]}
                                >
                                  Add Movie
                                </button>,
                                "className": "col-sm-6",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="col-sm-6"
                              >
                                <button
                                  class="btn-login"
                                >
                                  Add Movie
                                </button>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="col-sm-6"
                            >
                              <button
                                class="btn-cancel"
                              >
                                Cancel
                              </button>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 4,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="col-sm-6"
                              >
                                <button
                                  className="btn-cancel"
                                  onClick={[MockFunction]}
                                >
                                  Cancel
                                </button>
                              </div>,
                              <div
                                className="col-sm-6"
                              >
                                <button
                                  className="btn-login"
                                  onClick={[Function]}
                                >
                                  Add Movie
                                </button>
                              </div>,
                            ],
                            "className": "row",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="col-sm-6"
                              >
                                <button
                                  className="btn-cancel"
                                  onClick={[MockFunction]}
                                >
                                  Cancel
                                </button>
                              </div>,
                              <div
                                className="col-sm-6"
                              >
                                <button
                                  className="btn-login"
                                  onClick={[Function]}
                                >
                                  Add Movie
                                </button>
                              </div>,
                            ],
                            "className": "row",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="row"
                          >
                            <div
                              class="col-sm-6"
                            >
                              <button
                                class="btn-cancel"
                              >
                                Cancel
                              </button>
                            </div>
                            <div
                              class="col-sm-6"
                            >
                              <button
                                class="btn-login"
                              >
                                Add Movie
                              </button>
                            </div>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <textarea
                          class="txt-movie-desc"
                          placeholder="Movie overview"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "textarea",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      placeholder="Casts"
                      type="text"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "stateNode": <input
                    placeholder="Movie Title"
                    type="text"
                  />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "form",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />,
                    <input
                      placeholder="Casts"
                      type="text"
                    />,
                    <div
                      className="row"
                    >
                      <div
                        className="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          className="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        className="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          className="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>,
                    <textarea
                      className="txt-movie-desc"
                      placeholder="Movie overview"
                    />,
                    <div
                      className="row"
                    >
                      <div
                        className="col-sm-6"
                      >
                        <button
                          className="btn-cancel"
                          onClick={[MockFunction]}
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        className="col-sm-6"
                      >
                        <button
                          className="btn-login"
                          onClick={[Function]}
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />,
                    <input
                      placeholder="Casts"
                      type="text"
                    />,
                    <div
                      className="row"
                    >
                      <div
                        className="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          className="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        className="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          className="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>,
                    <textarea
                      className="txt-movie-desc"
                      placeholder="Movie overview"
                    />,
                    <div
                      className="row"
                    >
                      <div
                        className="col-sm-6"
                      >
                        <button
                          className="btn-cancel"
                          onClick={[MockFunction]}
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        className="col-sm-6"
                      >
                        <button
                          className="btn-login"
                          onClick={[Function]}
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <form>
                  <input
                    placeholder="Movie Title"
                    type="text"
                  />
                  <input
                    placeholder="Casts"
                    type="text"
                  />
                  <div
                    class="row"
                  >
                    <div
                      class="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />
                      <i
                        class="material-icons"
                      >
                        date_range
                      </i>
                    </div>
                    <div
                      class="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />
                      <i
                        class="material-icons"
                      >
                        cloud_upload
                      </i>
                    </div>
                  </div>
                  <textarea
                    class="txt-movie-desc"
                    placeholder="Movie overview"
                  />
                  <div
                    class="row"
                  >
                    <div
                      class="col-sm-6"
                    >
                      <button
                        class="btn-cancel"
                      >
                        Cancel
                      </button>
                    </div>
                    <div
                      class="col-sm-6"
                    >
                      <button
                        class="btn-login"
                      >
                        Add Movie
                      </button>
                    </div>
                  </div>
                </form>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "form",
                "updateQueue": null,
              },
              "stateNode": <i
                class="material-icons btn-close"
              >
                close
              </i>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "i",
              "updateQueue": null,
            },
            "stateNode": <span
              class="logo"
            >
              <i
                class="material-icons"
              >
                timeline
              </i>
              <span
                class="logo-text"
              >
                Add Movie
              </span>
            </span>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "span",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <span
                className="logo"
              >
                <i
                  className="material-icons"
                >
                  timeline
                </i>
                <span
                  className="logo-text"
                >
                  Add Movie
                </span>
              </span>,
              <i
                className="material-icons btn-close"
                onClick={[MockFunction]}
              >
                close
              </i>,
              <form>
                <input
                  placeholder="Movie Title"
                  type="text"
                />
                <input
                  placeholder="Casts"
                  type="text"
                />
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      date_range
                    </i>
                  </div>
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>
                </div>
                <textarea
                  className="txt-movie-desc"
                  placeholder="Movie overview"
                />
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-cancel"
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </button>
                  </div>
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-login"
                      onClick={[Function]}
                    >
                      Add Movie
                    </button>
                  </div>
                </div>
              </form>,
            ],
            "className": "login-form",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <span
                className="logo"
              >
                <i
                  className="material-icons"
                >
                  timeline
                </i>
                <span
                  className="logo-text"
                >
                  Add Movie
                </span>
              </span>,
              <i
                className="material-icons btn-close"
                onClick={[MockFunction]}
              >
                close
              </i>,
              <form>
                <input
                  placeholder="Movie Title"
                  type="text"
                />
                <input
                  placeholder="Casts"
                  type="text"
                />
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      date_range
                    </i>
                  </div>
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>
                </div>
                <textarea
                  className="txt-movie-desc"
                  placeholder="Movie overview"
                />
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-cancel"
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </button>
                  </div>
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-login"
                      onClick={[Function]}
                    >
                      Add Movie
                    </button>
                  </div>
                </div>
              </form>,
            ],
            "className": "login-form",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="login-form"
          >
            <span
              class="logo"
            >
              <i
                class="material-icons"
              >
                timeline
              </i>
              <span
                class="logo-text"
              >
                Add Movie
              </span>
            </span>
            <i
              class="material-icons btn-close"
            >
              close
            </i>
            <form>
              <input
                placeholder="Movie Title"
                type="text"
              />
              <input
                placeholder="Casts"
                type="text"
              />
              <div
                class="row"
              >
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Date of Launch"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    date_range
                  </i>
                </div>
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Movie Poster"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    cloud_upload
                  </i>
                </div>
              </div>
              <textarea
                class="txt-movie-desc"
                placeholder="Movie overview"
              />
              <div
                class="row"
              >
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-cancel"
                  >
                    Cancel
                  </button>
                </div>
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-login"
                  >
                    Add Movie
                  </button>
                </div>
              </div>
            </form>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "addNewMovie": [MockFunction],
          "closeAddMovie": [MockFunction],
          "showNotification": [MockFunction],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "addNewMovie": [MockFunction],
          "closeAddMovie": [MockFunction],
          "showNotification": [MockFunction],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 62,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addNewMovie": [MockFunction],
                    "closeAddMovie": [MockFunction],
                    "showNotification": [MockFunction],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login-form"
                >
                  <span
                    class="logo"
                  >
                    <i
                      class="material-icons"
                    >
                      timeline
                    </i>
                    <span
                      class="logo-text"
                    >
                      Add Movie
                    </span>
                  </span>
                  <i
                    class="material-icons btn-close"
                  >
                    close
                  </i>
                  <form>
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />
                    <input
                      placeholder="Casts"
                      type="text"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>
                    <textarea
                      class="txt-movie-desc"
                      placeholder="Movie overview"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addNewMovie": [MockFunction],
              "closeAddMovie": [MockFunction],
              "showNotification": [MockFunction],
            },
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addNewMovie": [MockFunction],
                          "closeAddMovie": [MockFunction],
                          "showNotification": [MockFunction],
                        }
                      }
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addNewMovie": [MockFunction],
                    "closeAddMovie": [MockFunction],
                    "showNotification": [MockFunction],
                  }
                }
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="login-form"
                >
                  <span
                    class="logo"
                  >
                    <i
                      class="material-icons"
                    >
                      timeline
                    </i>
                    <span
                      class="logo-text"
                    >
                      Add Movie
                    </span>
                  </span>
                  <i
                    class="material-icons btn-close"
                  >
                    close
                  </i>
                  <form>
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />
                    <input
                      placeholder="Casts"
                      type="text"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>
                    <textarea
                      class="txt-movie-desc"
                      placeholder="Movie overview"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 15,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "addMovie": [Function],
      "context": Object {},
      "props": Object {
        "addNewMovie": [MockFunction],
        "closeAddMovie": [MockFunction],
        "showNotification": [MockFunction],
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "addNewMovie": [MockFunction],
      "closeAddMovie": [MockFunction],
      "showNotification": [MockFunction],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="login-form"
      >
        <span
          class="logo"
        >
          <i
            class="material-icons"
          >
            timeline
          </i>
          <span
            class="logo-text"
          >
            Add Movie
          </span>
        </span>
        <i
          class="material-icons btn-close"
        >
          close
        </i>
        <form>
          <input
            placeholder="Movie Title"
            type="text"
          />
          <input
            placeholder="Casts"
            type="text"
          />
          <div
            class="row"
          >
            <div
              class="col-sm-6 icon-overlay"
            >
              <input
                placeholder="Date of Launch"
                type="text"
              />
              <i
                class="material-icons"
              >
                date_range
              </i>
            </div>
            <div
              class="col-sm-6 icon-overlay"
            >
              <input
                placeholder="Movie Poster"
                type="text"
              />
              <i
                class="material-icons"
              >
                cloud_upload
              </i>
            </div>
          </div>
          <textarea
            class="txt-movie-desc"
            placeholder="Movie overview"
          />
          <div
            class="row"
          >
            <div
              class="col-sm-6"
            >
              <button
                class="btn-cancel"
              >
                Cancel
              </button>
            </div>
            <div
              class="col-sm-6"
            >
              <button
                class="btn-login"
              >
                Add Movie
              </button>
            </div>
          </div>
        </form>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="logo"
          >
            <i
              className="material-icons"
            >
              timeline
            </i>
            <span
              className="logo-text"
            >
              Add Movie
            </span>
          </span>,
          <i
            className="material-icons btn-close"
            onClick={[MockFunction]}
          >
            close
          </i>,
          <form>
            <input
              placeholder="Movie Title"
              type="text"
            />
            <input
              placeholder="Casts"
              type="text"
            />
            <div
              className="row"
            >
              <div
                className="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Date of Launch"
                  type="text"
                />
                <i
                  className="material-icons"
                >
                  date_range
                </i>
              </div>
              <div
                className="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Movie Poster"
                  type="text"
                />
                <i
                  className="material-icons"
                >
                  cloud_upload
                </i>
              </div>
            </div>
            <textarea
              className="txt-movie-desc"
              placeholder="Movie overview"
            />
            <div
              className="row"
            >
              <div
                className="col-sm-6"
              >
                <button
                  className="btn-cancel"
                  onClick={[MockFunction]}
                >
                  Cancel
                </button>
              </div>
              <div
                className="col-sm-6"
              >
                <button
                  className="btn-login"
                  onClick={[Function]}
                >
                  Add Movie
                </button>
              </div>
            </div>
          </form>,
        ],
        "className": "login-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="logo"
          >
            <i
              class="material-icons"
            >
              timeline
            </i>
            <span
              class="logo-text"
            >
              Add Movie
            </span>
          </span>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="material-icons"
              >
                timeline
              </i>,
              <span
                className="logo-text"
              >
                Add Movie
              </span>,
            ],
            "className": "logo",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <i
                class="material-icons"
              >
                timeline
              </i>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "timeline",
                "className": "material-icons",
              },
              "ref": null,
              "rendered": Array [
                "timeline",
              ],
              "type": "i",
            },
            Object {
              "instance": <span
                class="logo-text"
              >
                Add Movie
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Movie",
                "className": "logo-text",
              },
              "ref": null,
              "rendered": Array [
                "Add Movie",
              ],
              "type": "span",
            },
          ],
          "type": "span",
        },
        Object {
          "instance": <i
            class="material-icons btn-close"
          >
            close
          </i>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "close",
            "className": "material-icons btn-close",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": Array [
            "close",
          ],
          "type": "i",
        },
        Object {
          "instance": <form>
            <input
              placeholder="Movie Title"
              type="text"
            />
            <input
              placeholder="Casts"
              type="text"
            />
            <div
              class="row"
            >
              <div
                class="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Date of Launch"
                  type="text"
                />
                <i
                  class="material-icons"
                >
                  date_range
                </i>
              </div>
              <div
                class="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Movie Poster"
                  type="text"
                />
                <i
                  class="material-icons"
                >
                  cloud_upload
                </i>
              </div>
            </div>
            <textarea
              class="txt-movie-desc"
              placeholder="Movie overview"
            />
            <div
              class="row"
            >
              <div
                class="col-sm-6"
              >
                <button
                  class="btn-cancel"
                >
                  Cancel
                </button>
              </div>
              <div
                class="col-sm-6"
              >
                <button
                  class="btn-login"
                >
                  Add Movie
                </button>
              </div>
            </div>
          </form>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                placeholder="Movie Title"
                type="text"
              />,
              <input
                placeholder="Casts"
                type="text"
              />,
              <div
                className="row"
              >
                <div
                  className="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Date of Launch"
                    type="text"
                  />
                  <i
                    className="material-icons"
                  >
                    date_range
                  </i>
                </div>
                <div
                  className="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Movie Poster"
                    type="text"
                  />
                  <i
                    className="material-icons"
                  >
                    cloud_upload
                  </i>
                </div>
              </div>,
              <textarea
                className="txt-movie-desc"
                placeholder="Movie overview"
              />,
              <div
                className="row"
              >
                <div
                  className="col-sm-6"
                >
                  <button
                    className="btn-cancel"
                    onClick={[MockFunction]}
                  >
                    Cancel
                  </button>
                </div>
                <div
                  className="col-sm-6"
                >
                  <button
                    className="btn-login"
                    onClick={[Function]}
                  >
                    Add Movie
                  </button>
                </div>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <input
                placeholder="Movie Title"
                type="text"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "placeholder": "Movie Title",
                "type": "text",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
            Object {
              "instance": <input
                placeholder="Casts"
                type="text"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "placeholder": "Casts",
                "type": "text",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "input",
            },
            Object {
              "instance": <div
                class="row"
              >
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Date of Launch"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    date_range
                  </i>
                </div>
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Movie Poster"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    cloud_upload
                  </i>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      date_range
                    </i>
                  </div>,
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      date_range
                    </i>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />,
                      <i
                        className="material-icons"
                      >
                        date_range
                      </i>,
                    ],
                    "className": "col-sm-6 icon-overlay",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <input
                        placeholder="Date of Launch"
                        type="text"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "placeholder": "Date of Launch",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                    Object {
                      "instance": <i
                        class="material-icons"
                      >
                        date_range
                      </i>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "date_range",
                        "className": "material-icons",
                      },
                      "ref": null,
                      "rendered": Array [
                        "date_range",
                      ],
                      "type": "i",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />,
                      <i
                        className="material-icons"
                      >
                        cloud_upload
                      </i>,
                    ],
                    "className": "col-sm-6 icon-overlay",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <input
                        placeholder="Movie Poster"
                        type="text"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "placeholder": "Movie Poster",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                    Object {
                      "instance": <i
                        class="material-icons"
                      >
                        cloud_upload
                      </i>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "cloud_upload",
                        "className": "material-icons",
                      },
                      "ref": null,
                      "rendered": Array [
                        "cloud_upload",
                      ],
                      "type": "i",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": <textarea
                class="txt-movie-desc"
                placeholder="Movie overview"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "txt-movie-desc",
                "placeholder": "Movie overview",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "textarea",
            },
            Object {
              "instance": <div
                class="row"
              >
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-cancel"
                  >
                    Cancel
                  </button>
                </div>
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-login"
                  >
                    Add Movie
                  </button>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-cancel"
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </button>
                  </div>,
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-login"
                      onClick={[Function]}
                    >
                      Add Movie
                    </button>
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-cancel"
                    >
                      Cancel
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="btn-cancel"
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </button>,
                    "className": "col-sm-6",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <button
                        class="btn-cancel"
                      >
                        Cancel
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Cancel",
                        "className": "btn-cancel",
                        "onClick": [MockFunction],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Cancel",
                      ],
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-login"
                    >
                      Add Movie
                    </button>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="btn-login"
                      onClick={[Function]}
                    >
                      Add Movie
                    </button>,
                    "className": "col-sm-6",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <button
                        class="btn-login"
                      >
                        Add Movie
                      </button>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Add Movie",
                        "className": "btn-login",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        "Add Movie",
                      ],
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": AddMovieModal {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 63,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login-form"
                    >
                      <span
                        class="logo"
                      >
                        <i
                          class="material-icons"
                        >
                          timeline
                        </i>
                        <span
                          class="logo-text"
                        >
                          Add Movie
                        </span>
                      </span>
                      <i
                        class="material-icons btn-close"
                      >
                        close
                      </i>
                      <form>
                        <input
                          placeholder="Movie Title"
                          type="text"
                        />
                        <input
                          placeholder="Casts"
                          type="text"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>
                        </div>
                        <textarea
                          class="txt-movie-desc"
                          placeholder="Movie overview"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-cancel"
                            >
                              Cancel
                            </button>
                          </div>
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-login"
                            >
                              Add Movie
                            </button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addNewMovie": [MockFunction],
                        "closeAddMovie": [MockFunction],
                        "showNotification": [MockFunction],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login-form"
                    >
                      <span
                        class="logo"
                      >
                        <i
                          class="material-icons"
                        >
                          timeline
                        </i>
                        <span
                          class="logo-text"
                        >
                          Add Movie
                        </span>
                      </span>
                      <i
                        class="material-icons btn-close"
                      >
                        close
                      </i>
                      <form>
                        <input
                          placeholder="Movie Title"
                          type="text"
                        />
                        <input
                          placeholder="Casts"
                          type="text"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>
                        </div>
                        <textarea
                          class="txt-movie-desc"
                          placeholder="Movie overview"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-cancel"
                            >
                              Cancel
                            </button>
                          </div>
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-login"
                            >
                              Add Movie
                            </button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addNewMovie": [MockFunction],
                        "closeAddMovie": [MockFunction],
                        "showNotification": [MockFunction],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addNewMovie": [MockFunction],
                  "closeAddMovie": [MockFunction],
                  "showNotification": [MockFunction],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addNewMovie": [MockFunction],
                  "closeAddMovie": [MockFunction],
                  "showNotification": [MockFunction],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 64,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
              "lineNumber": 28,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 65,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                "lineNumber": 29,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 68,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                  "lineNumber": 30,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "i",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "timeline",
                  "className": "material-icons",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "timeline",
                  "className": "material-icons",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 69,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                    "lineNumber": 31,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "span",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Add Movie",
                    "className": "logo-text",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Add Movie",
                    "className": "logo-text",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <span
                    class="logo-text"
                  >
                    Add Movie
                  </span>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "span",
                  "updateQueue": null,
                },
                "stateNode": <i
                  class="material-icons"
                >
                  timeline
                </i>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "i",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "span",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <i
                    className="material-icons"
                  >
                    timeline
                  </i>,
                  <span
                    className="logo-text"
                  >
                    Add Movie
                  </span>,
                ],
                "className": "logo",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <i
                    className="material-icons"
                  >
                    timeline
                  </i>,
                  <span
                    className="logo-text"
                  >
                    Add Movie
                  </span>,
                ],
                "className": "logo",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 66,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                  "lineNumber": 34,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "i",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "close",
                  "className": "material-icons btn-close",
                  "onClick": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "close",
                  "className": "material-icons btn-close",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 67,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                    "lineNumber": 41,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 70,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                      "lineNumber": 42,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "placeholder": "Movie Title",
                      "type": "text",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "placeholder": "Movie Title",
                      "type": "text",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 71,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                        "lineNumber": 43,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "placeholder": "Casts",
                        "type": "text",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "placeholder": "Casts",
                        "type": "text",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 72,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                          "lineNumber": 44,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 75,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                            "lineNumber": 45,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 77,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 46,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "placeholder": "Date of Launch",
                              "type": "text",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "placeholder": "Date of Launch",
                              "type": "text",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 78,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 47,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "i",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "date_range",
                                "className": "material-icons",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "date_range",
                                "className": "material-icons",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <i
                                class="material-icons"
                              >
                                date_range
                              </i>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "i",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              placeholder="Date of Launch"
                              type="text"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                placeholder="Date of Launch"
                                type="text"
                              />,
                              <i
                                className="material-icons"
                              >
                                date_range
                              </i>,
                            ],
                            "className": "col-sm-6 icon-overlay",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <input
                                placeholder="Date of Launch"
                                type="text"
                              />,
                              <i
                                className="material-icons"
                              >
                                date_range
                              </i>,
                            ],
                            "className": "col-sm-6 icon-overlay",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 76,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 49,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 79,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 50,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "input",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "placeholder": "Movie Poster",
                                "type": "text",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "placeholder": "Movie Poster",
                                "type": "text",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 80,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                  "lineNumber": 51,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "i",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "cloud_upload",
                                  "className": "material-icons",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "cloud_upload",
                                  "className": "material-icons",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <i
                                  class="material-icons"
                                >
                                  cloud_upload
                                </i>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "i",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                placeholder="Movie Poster"
                                type="text"
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Movie Poster"
                                  type="text"
                                />,
                                <i
                                  className="material-icons"
                                >
                                  cloud_upload
                                </i>,
                              ],
                              "className": "col-sm-6 icon-overlay",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <input
                                  placeholder="Movie Poster"
                                  type="text"
                                />,
                                <i
                                  className="material-icons"
                                >
                                  cloud_upload
                                </i>,
                              ],
                              "className": "col-sm-6 icon-overlay",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="col-sm-6 icon-overlay"
                            >
                              <input
                                placeholder="Movie Poster"
                                type="text"
                              />
                              <i
                                class="material-icons"
                              >
                                cloud_upload
                              </i>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="col-sm-6 icon-overlay"
                            >
                              <input
                                placeholder="Date of Launch"
                                type="text"
                              />
                              <i
                                className="material-icons"
                              >
                                date_range
                              </i>
                            </div>,
                            <div
                              className="col-sm-6 icon-overlay"
                            >
                              <input
                                placeholder="Movie Poster"
                                type="text"
                              />
                              <i
                                className="material-icons"
                              >
                                cloud_upload
                              </i>
                            </div>,
                          ],
                          "className": "row",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="col-sm-6 icon-overlay"
                            >
                              <input
                                placeholder="Date of Launch"
                                type="text"
                              />
                              <i
                                className="material-icons"
                              >
                                date_range
                              </i>
                            </div>,
                            <div
                              className="col-sm-6 icon-overlay"
                            >
                              <input
                                placeholder="Movie Poster"
                                type="text"
                              />
                              <i
                                className="material-icons"
                              >
                                cloud_upload
                              </i>
                            </div>,
                          ],
                          "className": "row",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 73,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                            "lineNumber": 54,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "textarea",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "txt-movie-desc",
                            "placeholder": "Movie overview",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": "txt-movie-desc",
                            "placeholder": "Movie overview",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 74,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                              "lineNumber": 55,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 81,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                "lineNumber": 56,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 83,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                  "lineNumber": 57,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "button",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "Cancel",
                                  "className": "btn-cancel",
                                  "onClick": [MockFunction],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "Cancel",
                                  "className": "btn-cancel",
                                  "onClick": [MockFunction],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <button
                                  class="btn-cancel"
                                >
                                  Cancel
                                </button>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "button",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <button
                                  className="btn-cancel"
                                  onClick={[MockFunction]}
                                >
                                  Cancel
                                </button>,
                                "className": "col-sm-6",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <button
                                  className="btn-cancel"
                                  onClick={[MockFunction]}
                                >
                                  Cancel
                                </button>,
                                "className": "col-sm-6",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 82,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                  "lineNumber": 61,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 84,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/br1000258253/Projects/Personal_Projects/BitOfProperty/moviedb-demo/src/components/common/AddMovieModal/AddMovieModal.js",
                                    "lineNumber": 62,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "button",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Add Movie",
                                    "className": "btn-login",
                                    "onClick": [Function],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Add Movie",
                                    "className": "btn-login",
                                    "onClick": [Function],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <button
                                    class="btn-login"
                                  >
                                    Add Movie
                                  </button>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <button
                                    className="btn-login"
                                    onClick={[Function]}
                                  >
                                    Add Movie
                                  </button>,
                                  "className": "col-sm-6",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <button
                                    className="btn-login"
                                    onClick={[Function]}
                                  >
                                    Add Movie
                                  </button>,
                                  "className": "col-sm-6",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="col-sm-6"
                                >
                                  <button
                                    class="btn-login"
                                  >
                                    Add Movie
                                  </button>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="col-sm-6"
                              >
                                <button
                                  class="btn-cancel"
                                >
                                  Cancel
                                </button>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 4,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="col-sm-6"
                                >
                                  <button
                                    className="btn-cancel"
                                    onClick={[MockFunction]}
                                  >
                                    Cancel
                                  </button>
                                </div>,
                                <div
                                  className="col-sm-6"
                                >
                                  <button
                                    className="btn-login"
                                    onClick={[Function]}
                                  >
                                    Add Movie
                                  </button>
                                </div>,
                              ],
                              "className": "row",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="col-sm-6"
                                >
                                  <button
                                    className="btn-cancel"
                                    onClick={[MockFunction]}
                                  >
                                    Cancel
                                  </button>
                                </div>,
                                <div
                                  className="col-sm-6"
                                >
                                  <button
                                    className="btn-login"
                                    onClick={[Function]}
                                  >
                                    Add Movie
                                  </button>
                                </div>,
                              ],
                              "className": "row",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="row"
                            >
                              <div
                                class="col-sm-6"
                              >
                                <button
                                  class="btn-cancel"
                                >
                                  Cancel
                                </button>
                              </div>
                              <div
                                class="col-sm-6"
                              >
                                <button
                                  class="btn-login"
                                >
                                  Add Movie
                                </button>
                              </div>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <textarea
                            class="txt-movie-desc"
                            placeholder="Movie overview"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "textarea",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="row"
                        >
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <input
                        placeholder="Casts"
                        type="text"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "stateNode": <input
                      placeholder="Movie Title"
                      type="text"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "form",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />,
                      <input
                        placeholder="Casts"
                        type="text"
                      />,
                      <div
                        className="row"
                      >
                        <div
                          className="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            className="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          className="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            className="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>,
                      <textarea
                        className="txt-movie-desc"
                        placeholder="Movie overview"
                      />,
                      <div
                        className="row"
                      >
                        <div
                          className="col-sm-6"
                        >
                          <button
                            className="btn-cancel"
                            onClick={[MockFunction]}
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          className="col-sm-6"
                        >
                          <button
                            className="btn-login"
                            onClick={[Function]}
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />,
                      <input
                        placeholder="Casts"
                        type="text"
                      />,
                      <div
                        className="row"
                      >
                        <div
                          className="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            className="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          className="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            className="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>,
                      <textarea
                        className="txt-movie-desc"
                        placeholder="Movie overview"
                      />,
                      <div
                        className="row"
                      >
                        <div
                          className="col-sm-6"
                        >
                          <button
                            className="btn-cancel"
                            onClick={[MockFunction]}
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          className="col-sm-6"
                        >
                          <button
                            className="btn-login"
                            onClick={[Function]}
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <form>
                    <input
                      placeholder="Movie Title"
                      type="text"
                    />
                    <input
                      placeholder="Casts"
                      type="text"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          date_range
                        </i>
                      </div>
                      <div
                        class="col-sm-6 icon-overlay"
                      >
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />
                        <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>
                      </div>
                    </div>
                    <textarea
                      class="txt-movie-desc"
                      placeholder="Movie overview"
                    />
                    <div
                      class="row"
                    >
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>
                      </div>
                      <div
                        class="col-sm-6"
                      >
                        <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>
                      </div>
                    </div>
                  </form>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "form",
                  "updateQueue": null,
                },
                "stateNode": <i
                  class="material-icons btn-close"
                >
                  close
                </i>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "i",
                "updateQueue": null,
              },
              "stateNode": <span
                class="logo"
              >
                <i
                  class="material-icons"
                >
                  timeline
                </i>
                <span
                  class="logo-text"
                >
                  Add Movie
                </span>
              </span>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "span",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <span
                  className="logo"
                >
                  <i
                    className="material-icons"
                  >
                    timeline
                  </i>
                  <span
                    className="logo-text"
                  >
                    Add Movie
                  </span>
                </span>,
                <i
                  className="material-icons btn-close"
                  onClick={[MockFunction]}
                >
                  close
                </i>,
                <form>
                  <input
                    placeholder="Movie Title"
                    type="text"
                  />
                  <input
                    placeholder="Casts"
                    type="text"
                  />
                  <div
                    className="row"
                  >
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        date_range
                      </i>
                    </div>
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        cloud_upload
                      </i>
                    </div>
                  </div>
                  <textarea
                    className="txt-movie-desc"
                    placeholder="Movie overview"
                  />
                  <div
                    className="row"
                  >
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-cancel"
                        onClick={[MockFunction]}
                      >
                        Cancel
                      </button>
                    </div>
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-login"
                        onClick={[Function]}
                      >
                        Add Movie
                      </button>
                    </div>
                  </div>
                </form>,
              ],
              "className": "login-form",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <span
                  className="logo"
                >
                  <i
                    className="material-icons"
                  >
                    timeline
                  </i>
                  <span
                    className="logo-text"
                  >
                    Add Movie
                  </span>
                </span>,
                <i
                  className="material-icons btn-close"
                  onClick={[MockFunction]}
                >
                  close
                </i>,
                <form>
                  <input
                    placeholder="Movie Title"
                    type="text"
                  />
                  <input
                    placeholder="Casts"
                    type="text"
                  />
                  <div
                    className="row"
                  >
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        date_range
                      </i>
                    </div>
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        cloud_upload
                      </i>
                    </div>
                  </div>
                  <textarea
                    className="txt-movie-desc"
                    placeholder="Movie overview"
                  />
                  <div
                    className="row"
                  >
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-cancel"
                        onClick={[MockFunction]}
                      >
                        Cancel
                      </button>
                    </div>
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-login"
                        onClick={[Function]}
                      >
                        Add Movie
                      </button>
                    </div>
                  </div>
                </form>,
              ],
              "className": "login-form",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="login-form"
            >
              <span
                class="logo"
              >
                <i
                  class="material-icons"
                >
                  timeline
                </i>
                <span
                  class="logo-text"
                >
                  Add Movie
                </span>
              </span>
              <i
                class="material-icons btn-close"
              >
                close
              </i>
              <form>
                <input
                  placeholder="Movie Title"
                  type="text"
                />
                <input
                  placeholder="Casts"
                  type="text"
                />
                <div
                  class="row"
                >
                  <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      date_range
                    </i>
                  </div>
                  <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>
                </div>
                <textarea
                  class="txt-movie-desc"
                  placeholder="Movie overview"
                />
                <div
                  class="row"
                >
                  <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-cancel"
                    >
                      Cancel
                    </button>
                  </div>
                  <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-login"
                    >
                      Add Movie
                    </button>
                  </div>
                </div>
              </form>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "addNewMovie": [MockFunction],
            "closeAddMovie": [MockFunction],
            "showNotification": [MockFunction],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "addNewMovie": [MockFunction],
            "closeAddMovie": [MockFunction],
            "showNotification": [MockFunction],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login-form"
                    >
                      <span
                        class="logo"
                      >
                        <i
                          class="material-icons"
                        >
                          timeline
                        </i>
                        <span
                          class="logo-text"
                        >
                          Add Movie
                        </span>
                      </span>
                      <i
                        class="material-icons btn-close"
                      >
                        close
                      </i>
                      <form>
                        <input
                          placeholder="Movie Title"
                          type="text"
                        />
                        <input
                          placeholder="Casts"
                          type="text"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>
                        </div>
                        <textarea
                          class="txt-movie-desc"
                          placeholder="Movie overview"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-cancel"
                            >
                              Cancel
                            </button>
                          </div>
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-login"
                            >
                              Add Movie
                            </button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addNewMovie": [MockFunction],
                        "closeAddMovie": [MockFunction],
                        "showNotification": [MockFunction],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addNewMovie": [MockFunction],
                "closeAddMovie": [MockFunction],
                "showNotification": [MockFunction],
              },
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 60,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 60,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="login-form"
                    >
                      <span
                        class="logo"
                      >
                        <i
                          class="material-icons"
                        >
                          timeline
                        </i>
                        <span
                          class="logo-text"
                        >
                          Add Movie
                        </span>
                      </span>
                      <i
                        class="material-icons btn-close"
                      >
                        close
                      </i>
                      <form>
                        <input
                          placeholder="Movie Title"
                          type="text"
                        />
                        <input
                          placeholder="Casts"
                          type="text"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Date of Launch"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              date_range
                            </i>
                          </div>
                          <div
                            class="col-sm-6 icon-overlay"
                          >
                            <input
                              placeholder="Movie Poster"
                              type="text"
                            />
                            <i
                              class="material-icons"
                            >
                              cloud_upload
                            </i>
                          </div>
                        </div>
                        <textarea
                          class="txt-movie-desc"
                          placeholder="Movie overview"
                        />
                        <div
                          class="row"
                        >
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-cancel"
                            >
                              Cancel
                            </button>
                          </div>
                          <div
                            class="col-sm-6"
                          >
                            <button
                              class="btn-login"
                            >
                              Add Movie
                            </button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 15,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addNewMovie": [MockFunction],
                            "closeAddMovie": [MockFunction],
                            "showNotification": [MockFunction],
                          }
                        }
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addNewMovie": [MockFunction],
                      "closeAddMovie": [MockFunction],
                      "showNotification": [MockFunction],
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="login-form"
                  >
                    <span
                      class="logo"
                    >
                      <i
                        class="material-icons"
                      >
                        timeline
                      </i>
                      <span
                        class="logo-text"
                      >
                        Add Movie
                      </span>
                    </span>
                    <i
                      class="material-icons btn-close"
                    >
                      close
                    </i>
                    <form>
                      <input
                        placeholder="Movie Title"
                        type="text"
                      />
                      <input
                        placeholder="Casts"
                        type="text"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Date of Launch"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            date_range
                          </i>
                        </div>
                        <div
                          class="col-sm-6 icon-overlay"
                        >
                          <input
                            placeholder="Movie Poster"
                            type="text"
                          />
                          <i
                            class="material-icons"
                          >
                            cloud_upload
                          </i>
                        </div>
                      </div>
                      <textarea
                        class="txt-movie-desc"
                        placeholder="Movie overview"
                      />
                      <div
                        class="row"
                      >
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-cancel"
                          >
                            Cancel
                          </button>
                        </div>
                        <div
                          class="col-sm-6"
                        >
                          <button
                            class="btn-login"
                          >
                            Add Movie
                          </button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 15,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addNewMovie": [MockFunction],
                        "closeAddMovie": [MockFunction],
                        "showNotification": [MockFunction],
                      }
                    }
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addNewMovie": [MockFunction],
                  "closeAddMovie": [MockFunction],
                  "showNotification": [MockFunction],
                },
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addNewMovie": [MockFunction],
                  "closeAddMovie": [MockFunction],
                  "showNotification": [MockFunction],
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "addMovie": [Function],
        "context": Object {},
        "props": Object {
          "addNewMovie": [MockFunction],
          "closeAddMovie": [MockFunction],
          "showNotification": [MockFunction],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "addNewMovie": [MockFunction],
        "closeAddMovie": [MockFunction],
        "showNotification": [MockFunction],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="login-form"
        >
          <span
            class="logo"
          >
            <i
              class="material-icons"
            >
              timeline
            </i>
            <span
              class="logo-text"
            >
              Add Movie
            </span>
          </span>
          <i
            class="material-icons btn-close"
          >
            close
          </i>
          <form>
            <input
              placeholder="Movie Title"
              type="text"
            />
            <input
              placeholder="Casts"
              type="text"
            />
            <div
              class="row"
            >
              <div
                class="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Date of Launch"
                  type="text"
                />
                <i
                  class="material-icons"
                >
                  date_range
                </i>
              </div>
              <div
                class="col-sm-6 icon-overlay"
              >
                <input
                  placeholder="Movie Poster"
                  type="text"
                />
                <i
                  class="material-icons"
                >
                  cloud_upload
                </i>
              </div>
            </div>
            <textarea
              class="txt-movie-desc"
              placeholder="Movie overview"
            />
            <div
              class="row"
            >
              <div
                class="col-sm-6"
              >
                <button
                  class="btn-cancel"
                >
                  Cancel
                </button>
              </div>
              <div
                class="col-sm-6"
              >
                <button
                  class="btn-login"
                >
                  Add Movie
                </button>
              </div>
            </div>
          </form>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="logo"
            >
              <i
                className="material-icons"
              >
                timeline
              </i>
              <span
                className="logo-text"
              >
                Add Movie
              </span>
            </span>,
            <i
              className="material-icons btn-close"
              onClick={[MockFunction]}
            >
              close
            </i>,
            <form>
              <input
                placeholder="Movie Title"
                type="text"
              />
              <input
                placeholder="Casts"
                type="text"
              />
              <div
                className="row"
              >
                <div
                  className="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Date of Launch"
                    type="text"
                  />
                  <i
                    className="material-icons"
                  >
                    date_range
                  </i>
                </div>
                <div
                  className="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Movie Poster"
                    type="text"
                  />
                  <i
                    className="material-icons"
                  >
                    cloud_upload
                  </i>
                </div>
              </div>
              <textarea
                className="txt-movie-desc"
                placeholder="Movie overview"
              />
              <div
                className="row"
              >
                <div
                  className="col-sm-6"
                >
                  <button
                    className="btn-cancel"
                    onClick={[MockFunction]}
                  >
                    Cancel
                  </button>
                </div>
                <div
                  className="col-sm-6"
                >
                  <button
                    className="btn-login"
                    onClick={[Function]}
                  >
                    Add Movie
                  </button>
                </div>
              </div>
            </form>,
          ],
          "className": "login-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="logo"
            >
              <i
                class="material-icons"
              >
                timeline
              </i>
              <span
                class="logo-text"
              >
                Add Movie
              </span>
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="material-icons"
                >
                  timeline
                </i>,
                <span
                  className="logo-text"
                >
                  Add Movie
                </span>,
              ],
              "className": "logo",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <i
                  class="material-icons"
                >
                  timeline
                </i>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "timeline",
                  "className": "material-icons",
                },
                "ref": null,
                "rendered": Array [
                  "timeline",
                ],
                "type": "i",
              },
              Object {
                "instance": <span
                  class="logo-text"
                >
                  Add Movie
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Movie",
                  "className": "logo-text",
                },
                "ref": null,
                "rendered": Array [
                  "Add Movie",
                ],
                "type": "span",
              },
            ],
            "type": "span",
          },
          Object {
            "instance": <i
              class="material-icons btn-close"
            >
              close
            </i>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "close",
              "className": "material-icons btn-close",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": Array [
              "close",
            ],
            "type": "i",
          },
          Object {
            "instance": <form>
              <input
                placeholder="Movie Title"
                type="text"
              />
              <input
                placeholder="Casts"
                type="text"
              />
              <div
                class="row"
              >
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Date of Launch"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    date_range
                  </i>
                </div>
                <div
                  class="col-sm-6 icon-overlay"
                >
                  <input
                    placeholder="Movie Poster"
                    type="text"
                  />
                  <i
                    class="material-icons"
                  >
                    cloud_upload
                  </i>
                </div>
              </div>
              <textarea
                class="txt-movie-desc"
                placeholder="Movie overview"
              />
              <div
                class="row"
              >
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-cancel"
                  >
                    Cancel
                  </button>
                </div>
                <div
                  class="col-sm-6"
                >
                  <button
                    class="btn-login"
                  >
                    Add Movie
                  </button>
                </div>
              </div>
            </form>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  placeholder="Movie Title"
                  type="text"
                />,
                <input
                  placeholder="Casts"
                  type="text"
                />,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      date_range
                    </i>
                  </div>
                  <div
                    className="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      className="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>
                </div>,
                <textarea
                  className="txt-movie-desc"
                  placeholder="Movie overview"
                />,
                <div
                  className="row"
                >
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-cancel"
                      onClick={[MockFunction]}
                    >
                      Cancel
                    </button>
                  </div>
                  <div
                    className="col-sm-6"
                  >
                    <button
                      className="btn-login"
                      onClick={[Function]}
                    >
                      Add Movie
                    </button>
                  </div>
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <input
                  placeholder="Movie Title"
                  type="text"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "placeholder": "Movie Title",
                  "type": "text",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
              Object {
                "instance": <input
                  placeholder="Casts"
                  type="text"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "placeholder": "Casts",
                  "type": "text",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
              Object {
                "instance": <div
                  class="row"
                >
                  <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Date of Launch"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      date_range
                    </i>
                  </div>
                  <div
                    class="col-sm-6 icon-overlay"
                  >
                    <input
                      placeholder="Movie Poster"
                      type="text"
                    />
                    <i
                      class="material-icons"
                    >
                      cloud_upload
                    </i>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        date_range
                      </i>
                    </div>,
                    <div
                      className="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />
                      <i
                        className="material-icons"
                      >
                        cloud_upload
                      </i>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Date of Launch"
                        type="text"
                      />
                      <i
                        class="material-icons"
                      >
                        date_range
                      </i>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          placeholder="Date of Launch"
                          type="text"
                        />,
                        <i
                          className="material-icons"
                        >
                          date_range
                        </i>,
                      ],
                      "className": "col-sm-6 icon-overlay",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <input
                          placeholder="Date of Launch"
                          type="text"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "placeholder": "Date of Launch",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "input",
                      },
                      Object {
                        "instance": <i
                          class="material-icons"
                        >
                          date_range
                        </i>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "date_range",
                          "className": "material-icons",
                        },
                        "ref": null,
                        "rendered": Array [
                          "date_range",
                        ],
                        "type": "i",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="col-sm-6 icon-overlay"
                    >
                      <input
                        placeholder="Movie Poster"
                        type="text"
                      />
                      <i
                        class="material-icons"
                      >
                        cloud_upload
                      </i>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <input
                          placeholder="Movie Poster"
                          type="text"
                        />,
                        <i
                          className="material-icons"
                        >
                          cloud_upload
                        </i>,
                      ],
                      "className": "col-sm-6 icon-overlay",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <input
                          placeholder="Movie Poster"
                          type="text"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "placeholder": "Movie Poster",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "input",
                      },
                      Object {
                        "instance": <i
                          class="material-icons"
                        >
                          cloud_upload
                        </i>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "cloud_upload",
                          "className": "material-icons",
                        },
                        "ref": null,
                        "rendered": Array [
                          "cloud_upload",
                        ],
                        "type": "i",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <textarea
                  class="txt-movie-desc"
                  placeholder="Movie overview"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "txt-movie-desc",
                  "placeholder": "Movie overview",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "textarea",
              },
              Object {
                "instance": <div
                  class="row"
                >
                  <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-cancel"
                    >
                      Cancel
                    </button>
                  </div>
                  <div
                    class="col-sm-6"
                  >
                    <button
                      class="btn-login"
                    >
                      Add Movie
                    </button>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-cancel"
                        onClick={[MockFunction]}
                      >
                        Cancel
                      </button>
                    </div>,
                    <div
                      className="col-sm-6"
                    >
                      <button
                        className="btn-login"
                        onClick={[Function]}
                      >
                        Add Movie
                      </button>
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="col-sm-6"
                    >
                      <button
                        class="btn-cancel"
                      >
                        Cancel
                      </button>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn-cancel"
                        onClick={[MockFunction]}
                      >
                        Cancel
                      </button>,
                      "className": "col-sm-6",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <button
                          class="btn-cancel"
                        >
                          Cancel
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Cancel",
                          "className": "btn-cancel",
                          "onClick": [MockFunction],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Cancel",
                        ],
                        "type": "button",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div
                      class="col-sm-6"
                    >
                      <button
                        class="btn-login"
                      >
                        Add Movie
                      </button>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="btn-login"
                        onClick={[Function]}
                      >
                        Add Movie
                      </button>,
                      "className": "col-sm-6",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <button
                          class="btn-login"
                        >
                          Add Movie
                        </button>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Add Movie",
                          "className": "btn-login",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Add Movie",
                        ],
                        "type": "button",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
