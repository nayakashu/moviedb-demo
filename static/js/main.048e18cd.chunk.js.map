{"version":3,"sources":["reducers/movieListReducer.js","reducers/modalReducer.js","reducers/navReducer.js","reducers/index.js","actions/types.js","store.js","actions/modalActions.js","actions/navActions.js","components/Header/Header.js","appConfig.js","actions/movieListActions.js","components/hocs/makeModal/makeModal.js","components/common/LoginModal/LoginModal.js","components/MainContent/MovieTile/MovieTile.js","components/common/Loader/Loader.js","services/commonService.js","components/MainContent/TopMovies/TopMovies.js","components/MainContent/MyMovies/MyMovies.js","components/common/LeftNav/LeftNav.js","components/common/AddMovieModal/AddMovieModal.js","components/common/Notification/Notification.js","components/MainContent/MainContent.js","App.js","serviceWorker.js","index.js","images/loader.svg"],"names":["initialState","topMovies","userMovies","loginModalOpen","addMovieModalOpen","modalType","modalMessge","leftNavOpen","activePage","isUserLoggedIn","combineReducers","movieListState","state","arguments","length","undefined","action","type","Object","objectSpread","payload","modalState","modalMessage","message","navState","middleware","thunk","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","apply","showNotification","dispatch","closeLeftNav","setActivePage","location","hash","Header","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","loggedInSection","react_default","a","createElement","className","onClick","props","openAddMovie","src","alt","loginSignupSection","openLoginForm","toggleLeftNav","react_router_dom","to","Component","connect","BASE_URL","API_KEY","ENDPOINT_URLS","FETCH_TOP_MOVIES","concat","FETCH_MOVIE_DETAILS","NOTIF_TYPES","SUCCESS","DANGER","getMovieDetails","movieIds","promiseList","map","item","axios","get","replace","Promise","all","addNewMovie","movieId","moviesList","localStorage","getItem","JSON","stringify","setItem","moviesListArr","parse","indexOf","push","then","responses","ex","makeModal","Comp","MakeModal","LoginModal","_getPrototypeOf2","_this","_len","args","Array","_key","call","performUserLogin","setUserLogin","closeLoginForm","placeholder","href","MovieTile","addMovieToList","deleteMovie","desc","sliceLength","slice","_this2","movieDetails","Math","round","popularity","editable","id","isAdded","poster_path","title","sliceDesc","release_date","overview","movieIndex","splice","Loader","loader","TopMovies","Loader_Loader","MainContent_MovieTile_MovieTile","some","MyMovies","index","data","LeftNav","AddMovieModal","addMovie","closeAddMovie","Notification","setTimeout","hideNotification","notifClasses","classNames","MainContent","fetchTopMovies","fetchMyMovies","loginModal","common_LoginModal_LoginModal","addMovieModal","common_AddMovieModal_AddMovieModal","leftNav","common_LeftNav_LeftNav","notification","common_Notification_Notification","react_router","exact","path","component","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","results","App","es","components_Header_Header","components_MainContent_MainContent","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.048e18cd.chunk.js","sourcesContent":["import { FETCH_TOP_MOVIES, FETCH_USER_MOVIES } from '../actions/types';\n\nconst initialState = {\n  topMovies: null,\n  userMovies: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    // Show list of top 10 movies\n    case FETCH_TOP_MOVIES:\n      return {\n        ...state,\n        topMovies: action.payload\n      };\n\n    // Show user's list of movie\n    case FETCH_USER_MOVIES:\n      return {\n        ...state,\n        userMovies: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  OPEN_LOGIN_FORM,\n  CLOSE_LOGIN_FORM,\n  OPEN_ADD_MOVIE,\n  CLOSE_ADD_MOVIE,\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION\n} from '../actions/types';\n\nconst initialState = {\n  loginModalOpen: false,\n  addMovieModalOpen: false,\n  modalType: null,\n  modalMessge: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    // Open login form\n    case OPEN_LOGIN_FORM:\n      return {\n        ...state,\n        loginModalOpen: true\n      };\n\n    // Close login form\n    case CLOSE_LOGIN_FORM:\n      return {\n        ...state,\n        loginModalOpen: false\n      };\n\n    // Open add movie form\n    case OPEN_ADD_MOVIE:\n      return {\n        ...state,\n        addMovieModalOpen: true\n      };\n\n    // Close add movie form\n    case CLOSE_ADD_MOVIE:\n      return {\n        ...state,\n        addMovieModalOpen: false\n      };\n\n    // Show notification\n    case SHOW_NOTIFICATION:\n      return {\n        ...state,\n        modalMessage: action.payload.message,\n        modalType: action.payload.type\n      };\n\n    // Hide notification\n    case HIDE_NOTIFICATION:\n      return {\n        ...state,\n        modalMessage: null,\n        modalType: null\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  OPEN_LEFT_NAV,\n  CLOSE_LEFT_NAV,\n  TOGGLE_LEFT_NAV,\n  SET_ACTIVE_PAGE,\n  SET_USER_LOGIN\n} from '../actions/types';\n\nconst initialState = {\n  leftNavOpen: false,\n  activePage: '/',\n  isUserLoggedIn: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    // Open nav menu\n    case OPEN_LEFT_NAV:\n      return {\n        ...state,\n        leftNavOpen: true\n      };\n\n    // Close nav menu\n    case CLOSE_LEFT_NAV:\n      return {\n        ...state,\n        leftNavOpen: false\n      };\n\n    // Toggle nav menu\n    case TOGGLE_LEFT_NAV:\n      return {\n        ...state,\n        leftNavOpen: !state.leftNavOpen\n      };\n\n    // Set active page\n    case SET_ACTIVE_PAGE:\n      return {\n        ...state,\n        activePage: action.payload\n      };\n\n    // Set user login\n    case SET_USER_LOGIN:\n      return {\n        ...state,\n        isUserLoggedIn: true\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport movieListReducer from './movieListReducer';\nimport modalReducer from './modalReducer';\nimport navReducer from './navReducer';\n\nexport default combineReducers({\n  movieListState: movieListReducer,\n  modalState: modalReducer,\n  navState: navReducer\n});\n","// Action types for movie list\nexport const FETCH_TOP_MOVIES = 'FETCH_TOP_MOVIES';\nexport const FETCH_USER_MOVIES = 'FETCH_USER_MOVIES';\nexport const ADD_NEW_MOVIE = 'ADD_NEW_MOVIE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\n\n// Modal actions\nexport const OPEN_LOGIN_FORM = 'OPEN_LOGIN_FORM';\nexport const OPEN_ADD_MOVIE = 'OPEN_ADD_MOVIE';\nexport const CLOSE_LOGIN_FORM = 'CLOSE_LOGIN_FORM';\nexport const CLOSE_ADD_MOVIE = 'CLOSE_ADD_MOVIE';\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\n\n// Left nav menu actions\nexport const OPEN_LEFT_NAV = 'OPEN_LEFT_NAV';\nexport const CLOSE_LEFT_NAV = 'CLOSE_LEFT_NAV';\nexport const TOGGLE_LEFT_NAV = 'TOGGLE_LEFT_NAV';\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE';\nexport const SET_USER_LOGIN = 'SET_USER_LOGIN';\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n// Initial state\nconst initialState = {};\n\n// Collection of middleware used\n// Thunk - for supporting asynchronous actions\nconst middleware = [thunk];\n\n// Setup a store for Redux\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__\n          ? window.__REDUX_DEVTOOLS_EXTENSION__()\n          : null\n      )\n    : applyMiddleware(...middleware)\n);\n\nexport default store;\n","import {\n  OPEN_LOGIN_FORM,\n  CLOSE_LOGIN_FORM,\n  OPEN_ADD_MOVIE,\n  CLOSE_ADD_MOVIE,\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION\n} from './types';\n\n// Open login form\nexport const openLoginForm = () => dispatch => {\n  dispatch({\n    type: OPEN_LOGIN_FORM\n  });\n};\n\n// Close login form\nexport const closeLoginForm = () => dispatch => {\n  dispatch({\n    type: CLOSE_LOGIN_FORM\n  });\n};\n\n// Open Add Movie\nexport const openAddMovie = () => dispatch => {\n  dispatch({\n    type: OPEN_ADD_MOVIE\n  });\n};\n\n// Close Add Movie\nexport const closeAddMovie = () => dispatch => {\n  dispatch({\n    type: CLOSE_ADD_MOVIE\n  });\n};\n\n// Show a notification\nexport const showNotification = (message, type) => dispatch => {\n  dispatch({\n    type: SHOW_NOTIFICATION,\n    payload: {\n      message: message,\n      type: type\n    }\n  });\n};\n\n// Hide notification\nexport const hideNotification = () => dispatch => {\n  dispatch({\n    type: HIDE_NOTIFICATION\n  });\n};\n","import {\n  OPEN_LEFT_NAV,\n  CLOSE_LEFT_NAV,\n  TOGGLE_LEFT_NAV,\n  SET_ACTIVE_PAGE,\n  SET_USER_LOGIN\n} from './types';\n\n// Open left nav menu\nexport const openLeftNav = () => dispatch => {\n  dispatch({\n    type: OPEN_LEFT_NAV\n  });\n};\n\n// Close left nav menu\nexport const closeLeftNav = () => dispatch => {\n  dispatch({\n    type: CLOSE_LEFT_NAV\n  });\n};\n\n// Toggle left nav menu\nexport const toggleLeftNav = () => dispatch => {\n  dispatch({\n    type: TOGGLE_LEFT_NAV\n  });\n};\n\n// Set active page\nexport const setActivePage = () => dispatch => {\n  dispatch({\n    type: SET_ACTIVE_PAGE,\n    payload: window.location.hash\n  });\n};\n\n// Set logged in user\nexport const setUserLogin = () => dispatch => {\n  dispatch({\n    type: SET_USER_LOGIN\n  });\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { openLoginForm, openAddMovie } from '../../actions/modalActions';\nimport { toggleLeftNav } from '../../actions/navActions';\n\nimport './Header.scss';\n\nexport class Header extends Component {\n  render() {\n    const loggedInSection = (\n      <span>\n        <button className=\"btn-add\" onClick={this.props.openAddMovie}>\n          <i className=\"material-icons menu-icon\">add</i>\n          Add Movie\n        </button>\n        <img\n          className=\"avatar-img\"\n          src=\"http://www.gravatar.com/avatar/4986132725905e951d64a41340178e63?s=200&r=pg&d=mm\"\n          alt=\"User Avatar\"\n        />\n      </span>\n    );\n\n    const loginSignupSection = (\n      <span>\n        <button className=\"btn-login\" onClick={this.props.openLoginForm}>\n          Login\n        </button>\n        <button className=\"btn-signup\">Sign Up</button>\n      </span>\n    );\n\n    return (\n      <div className=\"header-container\">\n        <div className=\"container\">\n          <div className=\"row main-menu\">\n            <div className=\"col-sm-3 logo-div\">\n              <i\n                className=\"material-icons menu-icon\"\n                onClick={this.props.toggleLeftNav}\n              >\n                menu\n              </i>\n              <span className=\"logo\">\n                <i className=\"material-icons menu-icon\">timeline</i>\n                <span className=\"logo-text\">MovieHunt</span>\n              </span>\n            </div>\n            <div className=\"col-sm-6\">\n              <ul className=\"menu-items\">\n                <Link to=\"/\">\n                  <li\n                    className={this.props.activePage === '#/' ? 'active' : ''}\n                  >\n                    Top Rated\n                  </li>\n                </Link>\n                <Link to=\"/mymovies\">\n                  <li\n                    className={\n                      this.props.activePage === '#/mymovies' ? 'active' : ''\n                    }\n                  >\n                    My Movies\n                  </li>\n                </Link>\n                <li>Discover</li>\n              </ul>\n            </div>\n            <div className=\"col-sm-3 login-section\">\n              {this.props.isUserLoggedIn ? loggedInSection : loginSignupSection}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activePage: state.navState.activePage,\n  isUserLoggedIn: state.navState.isUserLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  { openLoginForm, toggleLeftNav, openAddMovie }\n)(Header);\n","const BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '4f4f0d30ce7338e679e02e58c211e9bb';\n\nexport const POSTER_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const USER_MOVIES_LS_KEY = 'mymovies';\n\nexport const ENDPOINT_URLS = {\n  FETCH_TOP_MOVIES: `${BASE_URL}top_rated?api_key=${API_KEY}&page=1`,\n  FETCH_MOVIE_DETAILS: `${BASE_URL}<MOVIE_ID>?api_key=${API_KEY}&page=1`\n};\n\nexport const NOTIF_TYPES = {\n  SUCCESS: 'success',\n  DANGER: 'danger'\n};\n","import { FETCH_TOP_MOVIES, FETCH_USER_MOVIES } from './types';\nimport axios from 'axios';\nimport { ENDPOINT_URLS, USER_MOVIES_LS_KEY } from '../appConfig';\n\n// Fetch details of user movies\nconst getMovieDetails = movieIds => {\n  // Make ajax calls to get details about all the shortlisted movies\n  const promiseList = movieIds.map(item =>\n    axios.get(ENDPOINT_URLS.FETCH_MOVIE_DETAILS.replace('<MOVIE_ID>', item))\n  );\n\n  return Promise.all(promiseList);\n};\n\n// Fetches list of top 10 movies\nexport const fetchTopMovies = () => dispatch => {\n  axios.get(ENDPOINT_URLS.FETCH_TOP_MOVIES).then(responses => {\n    dispatch({\n      type: FETCH_TOP_MOVIES,\n      payload: responses && responses.data && responses.data.results\n    });\n  });\n};\n\n// Fetch list of movies added by the user\nexport const fetchMyMovies = () => dispatch => {\n  try {\n    // Fetch user's list of movies from localstorage\n    let moviesList = localStorage.getItem(USER_MOVIES_LS_KEY);\n\n    if (!moviesList) {\n      moviesList = JSON.stringify([238, 497, 517814, 40096, 539]);\n      localStorage.setItem(USER_MOVIES_LS_KEY, moviesList);\n    }\n\n    const moviesListArr = JSON.parse(moviesList);\n\n    getMovieDetails(moviesListArr).then(responses => {\n      return dispatch({\n        type: FETCH_USER_MOVIES,\n        payload: responses\n      });\n    });\n  } catch (ex) {}\n};\n\n// Add new movie to user's list\nexport const addNewMovie = movieId => dispatch => {\n  try {\n    // Fetch user's list of movies from localstorage\n    let moviesList = localStorage.getItem(USER_MOVIES_LS_KEY);\n\n    if (!moviesList) {\n      moviesList = JSON.stringify([238, 497, 517814, 40096, 539]);\n      localStorage.setItem(USER_MOVIES_LS_KEY, moviesList);\n    }\n\n    let moviesListArr = JSON.parse(moviesList);\n\n    // Add new movie if not already present\n    if (moviesListArr.indexOf(movieId) < 0) {\n      moviesListArr.push(movieId);\n\n      // Save new list in localstorage\n      localStorage.setItem(USER_MOVIES_LS_KEY, JSON.stringify(moviesListArr));\n    }\n\n    getMovieDetails(moviesListArr).then(responses => {\n      return dispatch({\n        type: FETCH_USER_MOVIES,\n        payload: responses\n      });\n    });\n  } catch (ex) {}\n};\n\n// Delete movie from user's list\nexport const deleteMovie = movieId => dispatch => {\n  try {\n    // Fetch user's list of movies from localstorage\n    let moviesList = localStorage.getItem(USER_MOVIES_LS_KEY);\n\n    if (!moviesList) {\n      moviesList = JSON.stringify([238, 497, 517814, 40096, 539]);\n      localStorage.setItem(USER_MOVIES_LS_KEY, moviesList);\n    }\n\n    let moviesListArr = JSON.parse(moviesList);\n\n    // Delete the movie\n    const movieIndex = moviesListArr.indexOf(movieId);\n    if (movieIndex > -1) {\n      moviesListArr.splice(movieIndex, 1);\n    }\n\n    // Save new list in localstorage\n    localStorage.setItem(USER_MOVIES_LS_KEY, JSON.stringify(moviesListArr));\n\n    getMovieDetails(moviesListArr).then(responses => {\n      return dispatch({\n        type: FETCH_USER_MOVIES,\n        payload: responses\n      });\n    });\n  } catch (ex) {}\n};\n","// Page is a higher order component that takes any div and converts it into a modal\nimport React, { Component } from 'react';\nimport './makeModal.scss';\n\nexport const makeModal = Comp => {\n  class MakeModal extends Component {\n    render() {\n      return (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <Comp />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return MakeModal;\n};\n\nexport default makeModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { closeLoginForm } from '../../../actions/modalActions';\nimport { setUserLogin } from '../../../actions/navActions';\nimport './LoginModal.scss';\nimport makeModal from '../../hocs/makeModal/makeModal';\n\nexport class LoginModal extends Component {\n  performUserLogin = () => {\n    this.props.setUserLogin();\n    this.props.closeLoginForm();\n  };\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <span className=\"logo\">\n          <i className=\"material-icons\">timeline</i>\n          <span className=\"logo-text\">MovieHunt</span>\n        </span>\n\n        <i\n          className=\"material-icons btn-close\"\n          onClick={this.props.closeLoginForm}\n        >\n          close\n        </i>\n\n        <form>\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"password\" placeholder=\"Password\" />\n          <button className=\"btn-login\" onClick={this.performUserLogin}>\n            Login\n          </button>\n        </form>\n\n        <div className=\"forgot-pass-legend\">\n          <span className=\"signup-link\">\n            Don't have an account? <a href=\"/#/\">Sign up</a>\n          </span>\n          <span className=\"recover-pass\">Recover password</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default makeModal(\n  connect(\n    null,\n    { closeLoginForm, setUserLogin }\n  )(LoginModal)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './MovieTile.scss';\nimport PropTypes from 'prop-types';\nimport { addNewMovie, deleteMovie } from '../../../actions/movieListActions';\nimport { showNotification } from '../../../actions/modalActions';\nimport { POSTER_BASE_URL, NOTIF_TYPES } from '../../../appConfig';\n\nexport class MovieTile extends Component {\n  sliceDesc(desc, sliceLength = 85) {\n    if (desc && desc.length > sliceLength) {\n      return desc.slice(0, sliceLength) + ' ...';\n    }\n    return desc;\n  }\n\n  addMovieToList = movieId => {\n    this.props.addNewMovie(movieId);\n    this.props.showNotification(\n      'Movie was added successfully',\n      NOTIF_TYPES.SUCCESS\n    );\n  };\n\n  deleteMovie = movieId => {\n    this.props.deleteMovie(movieId);\n    this.props.showNotification(\n      'Movie was deleted successfully',\n      NOTIF_TYPES.DANGER\n    );\n  };\n\n  render() {\n    const movieDetails = this.props.movieDetails;\n\n    return movieDetails ? (\n      <div className=\"movie-tile\">\n        <span className=\"popularity\">\n          {Math.round(movieDetails.popularity)}%\n          <span className=\"bottom-border\" />\n        </span>\n\n        {this.props.editable ? (\n          <i\n            className=\"material-icons ellipsis\"\n            onClick={() => this.deleteMovie(movieDetails.id)}\n          >\n            close\n          </i>\n        ) : (\n          <i\n            className=\"material-icons btn-like\"\n            onClick={() => {\n              this.props.isAdded\n                ? this.deleteMovie(movieDetails.id)\n                : this.addMovieToList(movieDetails.id);\n            }}\n          >\n            {this.props.isAdded ? 'favorite' : 'favorite_border'}\n          </i>\n        )}\n\n        <img\n          src={POSTER_BASE_URL + movieDetails.poster_path}\n          alt={movieDetails.title}\n        />\n        <div className=\"movie-details\">\n          <h4>{this.sliceDesc(movieDetails.title, 30)}</h4>\n          <div className=\"release-date\">{movieDetails.release_date}</div>\n          <div className=\"description\">\n            {this.sliceDesc(movieDetails.overview)}\n          </div>\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nMovieTile.propTypes = {\n  movieDetails: PropTypes.any,\n  editable: PropTypes.bool,\n  isAdded: PropTypes.bool\n};\n\nexport default connect(\n  null,\n  { addNewMovie, deleteMovie, showNotification }\n)(MovieTile);\n","import React from 'react';\nimport './Loader.scss';\nimport loader from '../../../images/loader.svg';\n\nexport default function Loader() {\n  return (\n    <div className=\"loader-container\">\n      <img src={loader} alt=\"\" />\n    </div>\n  );\n}\n","// Check if movie is already added to user's favorite list\nexport const isMovieAdded = (movieId, userMovies) => {\n  if (userMovies) {\n    return userMovies.some(item => item['data']['id'] === movieId);\n  }\n  return false;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MovieTile from '../MovieTile/MovieTile';\nimport Loader from '../../common/Loader/Loader';\nimport { closeLeftNav, setActivePage } from '../../../actions/navActions';\nimport { isMovieAdded } from '../../../services/commonService';\nimport './TopMovies.scss';\n\nexport class TopMovies extends Component {\n  componentDidMount() {\n    this.props.closeLeftNav();\n    this.props.setActivePage();\n  }\n\n  render() {\n    return (\n      <div className=\"top-rated-movies\">\n        <h3>Top Rated Movies</h3>\n        {this.props.topMovies ? null : <Loader />}\n        <div className=\"row\">\n          {this.props.topMovies &&\n            this.props.topMovies.map(item => (\n              <div className=\"col-sm-4 col-xs-6\" key={item.id}>\n                <MovieTile\n                  movieDetails={item}\n                  isAdded={isMovieAdded(item.id, this.props.userMovies)}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  topMovies: state.movieListState.topMovies,\n  userMovies: state.movieListState.userMovies\n});\n\nexport default connect(\n  mapStateToProps,\n  { closeLeftNav, setActivePage }\n)(TopMovies);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MovieTile from '../MovieTile/MovieTile';\nimport Loader from '../../common/Loader/Loader';\nimport { closeLeftNav, setActivePage } from '../../../actions/navActions';\nimport './MyMovies.scss';\n\nexport class MyMovies extends Component {\n  componentDidMount() {\n    this.props.closeLeftNav();\n    this.props.setActivePage();\n  }\n\n  render() {\n    return (\n      <div className=\"top-rated-movies\">\n        <h3>My Movies</h3>\n        {this.props.userMovies ? null : <Loader />}\n        <div className=\"row\">\n          {this.props.userMovies &&\n            this.props.userMovies.map((item, index) => (\n              <div className=\"col-sm-4 col-xs-6\" key={index}>\n                <MovieTile movieDetails={item && item.data} editable={true} />\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userMovies: state.movieListState.userMovies\n});\n\nexport default connect(\n  mapStateToProps,\n  { closeLeftNav, setActivePage }\n)(MyMovies);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { closeLeftNav } from '../../../actions/navActions';\nimport './LeftNav.scss';\n\nexport class LeftNav extends Component {\n  render() {\n    return (\n      <div className=\"left-nav-container\">\n        <i\n          className=\"material-icons left-nav-close\"\n          onClick={this.props.closeLeftNav}\n        >\n          close\n        </i>\n        <ul className=\"left-nav-menu\">\n          <li>\n            <Link to=\"/\">\n              <i className=\"material-icons\">movie</i>Top Movies\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/mymovies\">\n              <i className=\"material-icons\">person</i> My Movies\n            </Link>\n          </li>\n          <li>\n            <i className=\"material-icons\">settings</i>Settings\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { closeLeftNav }\n)(LeftNav);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { closeAddMovie, showNotification } from '../../../actions/modalActions';\nimport { addNewMovie } from '../../../actions/movieListActions';\nimport './AddMovieModal.scss';\nimport makeModal from '../../hocs/makeModal/makeModal';\nimport { NOTIF_TYPES } from '../../../appConfig';\n\nexport class AddMovieModal extends Component {\n  addMovie = () => {\n    this.props.closeAddMovie();\n    this.props.showNotification(\n      'New movie added successfully',\n      NOTIF_TYPES.SUCCESS\n    );\n\n    // Navigate to my movies page\n    window.location = '#/mymovies';\n\n    // Add the movie - Grave of the fireflies as default\n    this.props.addNewMovie(12477);\n  };\n\n  render() {\n    return (\n      <div className=\"login-form\">\n        <span className=\"logo\">\n          <i className=\"material-icons\">timeline</i>\n          <span className=\"logo-text\">Add Movie</span>\n        </span>\n\n        <i\n          className=\"material-icons btn-close\"\n          onClick={this.props.closeAddMovie}\n        >\n          close\n        </i>\n\n        <form>\n          <input type=\"text\" placeholder=\"Movie Title\" />\n          <input type=\"text\" placeholder=\"Casts\" />\n          <div className=\"row\">\n            <div className=\"col-sm-6 icon-overlay\">\n              <input type=\"text\" placeholder=\"Date of Launch\" />\n              <i className=\"material-icons\">date_range</i>\n            </div>\n            <div className=\"col-sm-6 icon-overlay\">\n              <input type=\"text\" placeholder=\"Movie Poster\" />\n              <i className=\"material-icons\">cloud_upload</i>\n            </div>\n          </div>\n          <textarea className=\"txt-movie-desc\" placeholder=\"Movie overview\" />\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <button className=\"btn-cancel\" onClick={this.props.closeAddMovie}>\n                Cancel\n              </button>\n            </div>\n            <div className=\"col-sm-6\">\n              <button className=\"btn-login\" onClick={this.addMovie}>\n                Add Movie\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default makeModal(\n  connect(\n    null,\n    { closeAddMovie, showNotification, addNewMovie }\n  )(AddMovieModal)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { hideNotification } from '../../../actions/modalActions';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Notification.scss';\n\nexport class Notification extends Component {\n  componentDidMount() {\n    // Hide notification after 3 seconds\n    setTimeout(() => {\n      this.props.hideNotification();\n    }, 2000);\n  }\n\n  render() {\n    const notifClasses = classNames('notif-container', this.props.type);\n\n    return (\n      <div className={notifClasses}>\n        <div className=\"notif-message\">\n          <i className=\"material-icons icon-notif\">notifications</i>\n          {this.props.message}\n        </div>\n        <i\n          className=\"material-icons btn-close\"\n          onClick={this.props.hideNotification}\n        >\n          close\n        </i>\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string\n};\n\nexport default connect(\n  null,\n  { hideNotification }\n)(Notification);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport './MainContent.scss';\nimport { fetchTopMovies, fetchMyMovies } from '../../actions/movieListActions';\nimport LoginModal from '../common/LoginModal/LoginModal';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'; // ES6\nimport TopMovies from './TopMovies/TopMovies';\nimport MyMovies from './MyMovies/MyMovies';\nimport LeftNav from '../common/LeftNav/LeftNav';\nimport AddMovieModal from '../common/AddMovieModal/AddMovieModal';\nimport Notification from '../common/Notification/Notification';\n\nexport class MainContent extends Component {\n  constructor(props) {\n    super(props);\n    // Fetch list of top movies & user movies\n    this.props.fetchTopMovies();\n    this.props.fetchMyMovies();\n  }\n\n  render() {\n    const loginModal = this.props.loginModalOpen ? <LoginModal /> : null;\n    const addMovieModal = this.props.addMovieModalOpen ? (\n      <AddMovieModal />\n    ) : null;\n    const leftNav = this.props.leftNavOpen ? <LeftNav /> : null;\n    const notification = this.props.modalMessage ? (\n      <Notification\n        type={this.props.modalType}\n        message={this.props.modalMessage}\n      />\n    ) : null;\n\n    return (\n      <div className=\"container\">\n        <Route exact path=\"/\" component={TopMovies} />\n        <Route exact path=\"/mymovies\" component={MyMovies} />\n\n        <ReactCSSTransitionGroup\n          transitionName=\"login-tran\"\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          {loginModal}\n          {leftNav}\n          {addMovieModal}\n          {notification}\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loginModalOpen: state.modalState.loginModalOpen,\n  addMovieModalOpen: state.modalState.addMovieModalOpen,\n  leftNavOpen: state.navState.leftNavOpen,\n  modalMessage: state.modalState.modalMessage,\n  modalType: state.modalState.modalType\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchTopMovies, fetchMyMovies }\n)(MainContent);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport MainContent from './components/MainContent/MainContent';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"app\">\n            <Header />\n            <MainContent />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.e669f44d.svg\";"],"sourceRoot":""}